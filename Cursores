 ¿Cuándo usar Cursores?

✅ Cuando necesitas procesar filas una por una.
✅ Para recorrer datos en bucles dentro de PL/SQL.
✅ Cuando una consulta devuelve varias filas y necesitas control sobre ellas.

🚀 Conclusión:
Un cursor permite recorrer los resultados de una consulta fila por fila dentro de PL/SQL, útil cuando necesitas procesar datos de manera secuencial.

DECLARE
    CURSOR c_empleados IS  
        SELECT nombre, salario FROM empleados WHERE salario > 2000;
    v_nombre empleados.nombre%TYPE;
    v_salario empleados.salario%TYPE;
BEGIN
    OPEN c_empleados;  -- Abrir el cursor
    LOOP
        FETCH c_empleados INTO v_nombre, v_salario;  -- Obtener fila
        EXIT WHEN c_empleados%NOTFOUND;  -- Salir cuando no haya más filas
        DBMS_OUTPUT.PUT_LINE('Empleado: ' || v_nombre || ' - Salario: ' || v_salario);
    END LOOP;
    CLOSE c_empleados;  -- Cerrar el cursor
END;
/
¿Qué pasa aquí?
✔ DECLARE CURSOR guarda la consulta.
✔ OPEN abre el cursor.
✔ FETCH obtiene una fila a la vez.
✔ EXIT WHEN %NOTFOUND detiene el bucle cuando no hay más filas.
✔ CLOSE cierra el cursor.

---CONSULTA ANTERIOR PERO CON UN BUCLE FOR;

BEGIN
    FOR r_empleado IN (SELECT nombre, salario FROM empleados WHERE salario > 2000) LOOP
        DBMS_OUTPUT.PUT_LINE('Empleado: ' || r_empleado.nombre || ' - Salario: ' || r_empleado.salario);
    END LOOP;
END;
/

✔ No necesitas DECLARE CURSOR, OPEN, FETCH ni CLOSE.
✔ El FOR recorre automáticamente cada fila de la consulta.
✔ r_empleado es un registro temporal que contiene los valores de cada fila.

🚀 Conclusión

Si solo necesitas recorrer filas sin un control manual, usa un FOR.
Es más corto, más limpio y evita errores al manejar el cursor automáticamente.

--------------------------------------------------------------------------------------------------

ATRIBUTO PARA CURSORES

✅ %FOUND → Hay más filas (sigue el bucle).
✅ %NOTFOUND → No hay más filas (se detiene el bucle).
✅ %ROWCOUNT → Cuenta filas recuperadas.
✅ %ISOPEN → Verifica si el cursor está abierto.


--------------------------------------------------------------------------------------------------

BEGIN
    -- Contador de filas
    DECLARE
        v_count NUMBER := 0;
    BEGIN
        FOR I IN (SELECT id, nombre, salario FROM empleados ORDER BY nombre DESC) LOOP
            DBMS_OUTPUT.PUT_LINE('Empleado: ' || I.id || ' - Nombre: ' || I.nombre || ' - Salario: ' || I.salario);
            
            -- Contar filas procesadas
            v_count := v_count + 1;
            DBMS_OUTPUT.PUT_LINE('Cantidad de empleados procesados: ' || v_count);
        END LOOP;
    END;
END;
/

--------------------------------------------------------------------------------------------------

EJEMPLO SENCILLO CON FOR

Usa un cursor explícito para recorrer los productos de la tabla.
Muestra en la salida el nombre y el precio de cada producto utilizando DBMS_OUTPUT.PUT_LINE.
Detén el bucle cuando ya no haya más productos.


BEGIN
    FOR I IN (SELECT nombre, precio FROM productos) LOOP
            DBMS_OUTPUT.PUT_LINE('Nombre: ' || I.nombre || ' Precio: ' || I.precio);
     END LOOP;
END; 
/
--------------------------------------------------------------------------------------------------

Consigna:

    Usa un cursor explícito para recorrer todos los productos de la categoría 3.
    Aumenta el precio de cada producto en un 5%.
    Muestra en la salida el nombre del producto y el nuevo precio después del incremento.
    Si el nuevo precio de un producto es mayor a 100, muestra el mensaje: "Producto caro".
    Después de procesar todos los productos de la categoría, muestra el total de productos procesados.

BEGIN
    -- Actualiza el precio de los productos de la categoría 3
    UPDATE productos SET precio = precio * 1.05 WHERE categoria_id = 3;

    -- Recorre los productos de la categoría 3
    FOR I IN (SELECT nombre, precio FROM productos WHERE categoria_id = 3) LOOP
        DBMS_OUTPUT.PUT_LINE('Producto: ' || I.nombre || ' Nuevo Precio: ' || I.precio);
        IF I.precio > 100 THEN 
            DBMS_OUTPUT.PUT_LINE('¡Producto caro!');
        END IF;
    END LOOP;

END;
/
DE LA FORMA LARGA SERÍAS ASI:

DECLARE
    CURSOR cursor_productos IS
        SELECT nombre, precio FROM productos WHERE categoria_id = 3;
    nombre productos.nombre%TYPE;
    precio productos.precio%TYPE;
BEGIN
    -- Abrir el cursor
    OPEN cursor_productos;
    
    -- Recorrer las filas
    LOOP
        FETCH cursor_productos INTO nombre, precio;
        EXIT WHEN cursor_productos%NOTFOUND;  -- Salir cuando no haya más filas
        
        -- Aplicar el aumento del 5% al precio
        precio := precio * 1.05;
        
        -- Mostrar el nombre y el nuevo precio
        DBMS_OUTPUT.PUT_LINE('Producto: ' || nombre || ' Nuevo Precio: ' || precio);
        
        -- Verificar si el precio es mayor a 100
        IF precio > 100 THEN
            DBMS_OUTPUT.PUT_LINE('¡Producto caro!');
        END IF;
    END LOOP;
    
    -- Cerrar el cursor
    CLOSE cursor_productos;
END;
/
--------------------------------------------------------------------------------------------------




