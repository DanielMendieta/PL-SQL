 Â¿CuÃ¡ndo usar Cursores?

âœ… Cuando necesitas procesar filas una por una.
âœ… Para recorrer datos en bucles dentro de PL/SQL.
âœ… Cuando una consulta devuelve varias filas y necesitas control sobre ellas.

ðŸš€ ConclusiÃ³n:
Un cursor permite recorrer los resultados de una consulta fila por fila dentro de PL/SQL, Ãºtil cuando necesitas procesar datos de manera secuencial.

DECLARE
    CURSOR c_empleados IS  
        SELECT nombre, salario FROM empleados WHERE salario > 2000;
    v_nombre empleados.nombre%TYPE;
    v_salario empleados.salario%TYPE;
BEGIN
    OPEN c_empleados;  -- Abrir el cursor
    LOOP
        FETCH c_empleados INTO v_nombre, v_salario;  -- Obtener fila
        EXIT WHEN c_empleados%NOTFOUND;  -- Salir cuando no haya mÃ¡s filas
        DBMS_OUTPUT.PUT_LINE('Empleado: ' || v_nombre || ' - Salario: ' || v_salario);
    END LOOP;
    CLOSE c_empleados;  -- Cerrar el cursor
END;
/
Â¿QuÃ© pasa aquÃ­?
âœ” DECLARE CURSOR guarda la consulta.
âœ” OPEN abre el cursor.
âœ” FETCH obtiene una fila a la vez.
âœ” EXIT WHEN %NOTFOUND detiene el bucle cuando no hay mÃ¡s filas.
âœ” CLOSE cierra el cursor.

CONSULTA ANTERIOR PERO CON UN BUCLE FOR;

BEGIN
    FOR r_empleado IN (SELECT nombre, salario FROM empleados WHERE salario > 2000) LOOP
        DBMS_OUTPUT.PUT_LINE('Empleado: ' || r_empleado.nombre || ' - Salario: ' || r_empleado.salario);
    END LOOP;
END;
/

âœ” No necesitas DECLARE CURSOR, OPEN, FETCH ni CLOSE.
âœ” El FOR recorre automÃ¡ticamente cada fila de la consulta.
âœ” r_empleado es un registro temporal que contiene los valores de cada fila.

ðŸš€ ConclusiÃ³n

Si solo necesitas recorrer filas sin un control manual, usa un FOR.
Es mÃ¡s corto, mÃ¡s limpio y evita errores al manejar el cursor automÃ¡ticamente.















